{"ast":null,"code":"var _jsxFileName = \"/Users/kylehornacek/Documents/natalia-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // You need to create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const pages = [{\n    title: 'Page 1',\n    content: 'This is the content of Page 1.'\n  }, {\n    title: 'Page 2',\n    content: 'This is the content of Page 2.'\n  }, {\n    title: 'Page 3',\n    content: 'This is the content of Page 3.'\n  }];\n  const nextPage = () => {\n    if (currentPage < pages.length - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pages[currentPage].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pages[currentPage].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PrevButton\",\n        onClick: prevPage,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: nextPage,\n        disabled: currentPage === pages.length - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","pages","title","content","nextPage","length","prevPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kylehornacek/Documents/natalia-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // You need to create this CSS file for styling\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const pages = [\n    { title: 'Page 1', content: 'This is the content of Page 1.' },\n    { title: 'Page 2', content: 'This is the content of Page 2.' },\n    { title: 'Page 3', content: 'This is the content of Page 3.' }\n  ];\n\n  const nextPage = () => {\n    if (currentPage < pages.length - 1) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage > 0) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"page\">\n        <h1>{pages[currentPage].title}</h1>\n        <p>{pages[currentPage].content}</p>\n      </div>\n      <div className=\"navigation\">\n        <button className=\"PrevButton\" onClick={prevPage} disabled={currentPage === 0}>Previous</button>\n        <button className=\"button\" onClick={nextPage} disabled={currentPage === pages.length - 1}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMO,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAiC,CAAC,EAC9D;IAAED,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAiC,CAAC,EAC9D;IAAED,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAiC,CAAC,CAC/D;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIL,WAAW,GAAGE,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;MAClCL,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIP,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAKW,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBZ,OAAA;QAAAY,QAAA,EAAKP,KAAK,CAACF,WAAW,CAAC,CAACG;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnChB,OAAA;QAAAY,QAAA,EAAIP,KAAK,CAACF,WAAW,CAAC,CAACI;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNhB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBZ,OAAA;QAAQW,SAAS,EAAC,YAAY;QAACM,OAAO,EAAEP,QAAS;QAACQ,QAAQ,EAAEf,WAAW,KAAK,CAAE;QAAAS,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChGhB,OAAA;QAAQW,SAAS,EAAC,QAAQ;QAACM,OAAO,EAAET,QAAS;QAACU,QAAQ,EAAEf,WAAW,KAAKE,KAAK,CAACI,MAAM,GAAG,CAAE;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAhCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}